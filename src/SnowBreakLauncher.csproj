<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFrameworks>net8.0;net8.0-windows</TargetFrameworks>
    <Nullable>enable</Nullable>
    <ImplicitUsings>disable</ImplicitUsings>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
    <RootNamespace>Leayal.SnowBreakLauncher</RootNamespace>
    <ApplicationIcon>snowbreak.ico</ApplicationIcon>
	<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <DefineTrace>false</DefineTrace>
	<!--This property is only meaningful for Linux, Windows SDK strip symbol away from binary by default-->
    <StripSymbols>true</StripSymbols>
    <!--
        Additional constants are: 
        - NO_WMI: Disallow using WMI to listen for ProcessStart and ProcessEnd events, fallback to polling. If publishing Trimming, WMI will not work (as of writing this). Enable this flag if build/publish with Trimming.
        - NO_IPV6: Disallow this application connecting to IPv6 destinations regardless OS supports IPv6 or not.
    -->
    <DefineConstants>$(DefineConstants);NO_WMI</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <PublishAot>true</PublishAot>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Publish'">
    <PublishAot>true</PublishAot>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="NativeMethods.txt" />
    <None Remove="snowbreak.ico" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="snowbreak.ico" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="snowbreak.ico" />
  </ItemGroup>

  <ItemGroup>
	<!--I decide to ditch this thing, favoring .NET8-->
	<PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.106">
     <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Condition="!$(DefineConstants.Contains('NO_WMI'))" Include="System.Management" Version="8.0.0" />
    <PackageReference Include="Avalonia" Version="11.1.1" />
    <PackageReference Include="Avalonia.Desktop" Version="11.1.1" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.1.1" />
    <PackageReference Include="Avalonia.Fonts.Inter" Version="11.1.1" />
    <PackageReference Include="MessageBox.Avalonia" Version="3.1.6" />
    <!--"Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration." is partially wrong-->
    <!--As of avalon v11.0.0, for whatever reasons, building with configuration Release without this package will simply fail with XAML Parse error (Unable to resolve type SimpleTheme from namespace https://github.com/avaloniaui)-->
    <!--The option to workaround this is not using SimpleTheme, or including this package below to build with SimpleTheme.-->  
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.1.1" />
  </ItemGroup>

  <ItemGroup>
    <UpToDateCheckInput Remove="Controls\LauncherNewsItemListView.axaml" />
  </ItemGroup>

  <ItemGroup>
    <UpToDateCheckInput Remove="Windows\LinuxWineSettings.axaml" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="NativeMethods.txt" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\dependencies\SharpHDiffPatch-Dotnet\SharpHDiffPatch.Core\SharpHDiffPatch.Core.csproj" />
  </ItemGroup>
</Project>

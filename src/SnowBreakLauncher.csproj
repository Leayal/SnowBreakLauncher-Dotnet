<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFrameworks>net7.0;net7.0-windows</TargetFrameworks>
	<!--Removes "net8.0;net8.0-windows" because despite not select these frameworks at all, VS2022 still tries to build on top of these UNSELECTED ones.
	Not only that, it will make VS2022 consider compilation failure due to the fact that CsWin32 destroyed compiler's analyzer by generating incompatible codes with .NET8.
	Also the instructions for customizing generated code of CsWin32 isn't very clear, either, I tried partial-ed class (and the opposite), as well as partial-ed method (and the opposite, too), compiler either complained ambigious for partial-ed attempt (or duplicate class/method, for non-partial attempt).
	So I gave up trying CsWin32 on .NET8 until Microsoft themselves can get their whole things work altogether in harmony.
	Build scripts aren't affected by this, just VS2022's dumb design.-->
    <Nullable>enable</Nullable>
    <ImplicitUsings>disable</ImplicitUsings>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
    <RootNamespace>Leayal.SnowBreakLauncher</RootNamespace>
    <ApplicationIcon>snowbreak.ico</ApplicationIcon>
    <Authors>Dramiel Leayal</Authors>
    <Company>Dramiel Leayal</Company>
    <DefineTrace>false</DefineTrace>
	<!--This property is only meaningful for Linux, Windows SDK strip symbol away from binary by default-->
    <StripSymbols>true</StripSymbols>
    <!--
        Additional constants are: 
        - NO_WMI: Disallow using WMI to listen for ProcessStart and ProcessEnd events, fallback to polling. If publishing Trimming, WMI will not work (as of writing this). Enable this flag if build/publish with Trimming.
        - NO_IPV6: Disallow this application connecting to IPv6 destinations regardless OS supports IPv6 or not.
    -->
    <DefineConstants>$(DefineConstants);NO_WMI</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <PublishAot>true</PublishAot>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Publish'">
    <PublishAot>true</PublishAot>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="snowbreak.ico" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="snowbreak.ico" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="snowbreak.ico" />
  </ItemGroup>

  <ItemGroup>
    <!--CsWin32 v0.3.46-beta still does not generate compatible code with .NET 8 SDK v1.0.0-rc1-->
	<!--Also, .NET 8 SDK v1.0.0-rc1 is a pure disappointment, as well as the VS2022, reason above, right below the TargetFrameworks prop-->
    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.46-beta">
     <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Condition="!$(DefineConstants.Contains('NO_WMI'))" Include="System.Management" Version="7.0.2" />
    <PackageReference Include="Avalonia" Version="11.0.4" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.4" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.4" />
    <PackageReference Include="Avalonia.Fonts.Inter" Version="11.0.4" />
    <PackageReference Include="MessageBox.Avalonia" Version="3.1.4" />
    <!--"Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration." is partially wrong-->
    <!--As of avalon v11.0.0, for whatever reasons, building with configuration Release without this package will simply fail with XAML Parse error (Unable to resolve type SimpleTheme from namespace https://github.com/avaloniaui)-->
    <!--The option to workaround this is not using SimpleTheme, or including this package below to build with SimpleTheme.-->  
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.4" />
  </ItemGroup>

  <ItemGroup>
    <UpToDateCheckInput Remove="Controls\LauncherNewsItemListView.axaml" />
  </ItemGroup>

  <ItemGroup>
    <UpToDateCheckInput Remove="Windows\LinuxWineSettings.axaml" />
  </ItemGroup>
</Project>
